version: '3.8'

services:
  # Infrastructure Services (Keep Redis and RabbitMQ for caching and messaging)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - urlshortener-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - urlshortener-network

  # Microservices - Updated for SQLite
  user-service:
    build:
      context: .
      dockerfile: src/UserService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/UserService.db
      - ConnectionStrings__RabbitMQ=rabbitmq
    ports:
      - "7001:80"
    depends_on:
      - rabbitmq
    networks:
      - urlshortener-network
    volumes:
      - user_data:/app/data

  url-shortening-service:
    build:
      context: .
      dockerfile: src/UrlShorteningService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/UrlShorteningService.db
      - Redis__ConnectionString=redis:6379
      - ConnectionStrings__RabbitMQ=rabbitmq
    ports:
      - "7002:80"
    depends_on:
      - redis
      - rabbitmq
    networks:
      - urlshortener-network
    volumes:
      - url_data:/app/data

  analytics-service:
    build:
      context: .
      dockerfile: src/AnalyticsService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Data Source=/app/data/AnalyticsService.db
      - ConnectionStrings__RabbitMQ=rabbitmq
    ports:
      - "7003:80"
    depends_on:
      - rabbitmq
    networks:
      - urlshortener-network
    volumes:
      - analytics_data:/app/data

  api-gateway:
    build:
      context: .
      dockerfile: src/ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "7000:80"
    depends_on:
      - user-service
      - url-shortening-service
      - analytics-service
    networks:
      - urlshortener-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - API_GATEWAY_URL=http://api-gateway
      - SITE_DOMAIN=localhost:8080
    ports:
      - "8080:80"
    depends_on:
      - api-gateway
    networks:
      - urlshortener-network
    volumes:
      - ./frontend:/var/www/html

volumes:
  redis_data:
  rabbitmq_data:
  user_data:
  url_data:
  analytics_data:

networks:
  urlshortener-network:
    driver: bridge